// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "Checking if DB is available",
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "self-health"
                ],
                "summary": "Ping Database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Response"
                        }
                    }
                }
            }
        },
        "/value/": {
            "post": {
                "description": "Retreiving metric value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "text/plain"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get  metric",
                "parameters": [
                    {
                        "description": "Get value for metric",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structs.MetricGet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Metric"
                        }
                    },
                    "404": {
                        "description": "ErrMetricNotFound",
                        "schema": {
                            "allOf": [
                                {},
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "501": {
                        "description": "ErrMetricBadType",
                        "schema": {
                            "allOf": [
                                {},
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/value/{metricType}/{metricID}": {
            "get": {
                "description": "Retreiving metric value",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Get metric",
                "parameters": [
                    {
                        "enum": [
                            "counter",
                            "gauge"
                        ],
                        "type": "string",
                        "description": "metric type",
                        "name": "metricType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "metric id",
                        "name": "metricID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/structs.Metric"
                        }
                    },
                    "404": {
                        "description": "ErrMetricNotFound",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "501": {
                        "description": "ErrMetricBadType",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "structs.Metric": {
            "type": "object",
            "properties": {
                "delta": {
                    "description": "значение метрики в случае передачи counter",
                    "type": "integer"
                },
                "hash": {
                    "description": "hmac метрики",
                    "type": "string"
                },
                "id": {
                    "description": "имя метрики",
                    "type": "string"
                },
                "type": {
                    "description": "параметр, принимающий значение gauge или counter",
                    "type": "string"
                },
                "value": {
                    "description": "значение метрики в случае передачи gauge",
                    "type": "number"
                }
            }
        },
        "structs.MetricGet": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "имя метрики",
                    "type": "string",
                    "example": "CPU"
                },
                "type": {
                    "description": "параметр, принимающий значение gauge или counter",
                    "type": "string",
                    "example": "gauge"
                }
            }
        },
        "structs.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Monitoring API",
	Description:      "Service for storing and retreiving metrics",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
